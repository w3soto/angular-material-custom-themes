@use 'sass:map';
  @use '@angular/material' as theming;


@mixin color($theme) {

  $custom-palettes: theming.get-color-config(map.get($theme, custom));

  .mat-badge {
    @each $key, $palette in $custom-palettes {
      &-#{$key} {
        .mat-badge-content {
          background-color: theming.get-color-from-palette($palette);

          $contrast: theming.get-color-from-palette($palette, default-contrast);
          @if $contrast {
            color: $contrast;
          }

        }
      }
    }
  }

}


@mixin typography($theme) {

  .mat-badge[matBadgeShape=square] .mat-badge-content,
  .mat-badge[matBadgeShape=rectangle] .mat-badge-content {
    border-radius: 4px;
  }

  .mat-badge[matBadgeShape=rectangle] .mat-badge-content {
    width: auto;
    padding: 0 4px;
  }

  .mat-badge[matBadgeShape=rectangle] {

    // before
    &.mat-badge-before .mat-badge-content {
      left: auto;
      right: 100%;
      margin-right: 4px;
    }

    // before + overlap
    &.mat-badge-before.mat-badge-overlap {
      .mat-badge-content {
        right: auto;
        margin-right: 0;
      }
      &.mat-badge-small .mat-badge-content {
        left: -4px;
      }
      &.mat-badge-medium .mat-badge-content {
        left: -6px;
      }
      &.mat-badge-large .mat-badge-content {
        left: -14px;
      }
    }

    // after
    &.mat-badge-after .mat-badge-content {
      right: auto;
      left: 100%;
      margin-left: 4px;
    }

    // after + overlap
    &.mat-badge-after.mat-badge-overlap {
      .mat-badge-content {
        left: auto;
        margin-left: 0;
      }
      &.mat-badge-small .mat-badge-content {
        right: -4px;
      }
      &.mat-badge-medium .mat-badge-content {
        right: -6px;
      }
      &.mat-badge-large .mat-badge-content {
        right: -14px;
      }
    }

  }

}


@mixin theme($theme) {
  @include color($theme);
  @include typography($theme);
}
