@use 'sass:map';
@use 'sass:meta';
@use '@angular/material' as theming;


@mixin _checked-color($palette, $thumb-checked-hue) {
  &.mat-checked {
    .mat-slide-toggle-thumb {
      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);
    }
    .mat-slide-toggle-bar {
      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue, 0.54);
    }
    .mat-ripple-element {
      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);
    }
  }
}


@mixin color($theme) {

  $custom-palettes: theming.get-color-config(map.get($theme, custom));

  $thumb-checked-hue: default;

  .mat-slide-toggle {

    @each $key, $palette in $custom-palettes {
      &[color=#{$key}],
      &.mat-#{$key} {
        @include _checked-color($palette, $thumb-checked-hue);
      }
    }

  }

}


@mixin density($theme) {

  .mat-slide-toggle[inner] {

    .mat-slide-toggle-bar {
      width: 24px;
    }

    .mat-slide-toggle-thumb-container {
      width: 10px;
      height: 10px;
      top: 2px;
      left: 2px;
    }

    .mat-slide-toggle-thumb {
      width: 10px;
      height: 10px;
    }

    &.mat-checked .mat-slide-toggle-thumb-container {
      transform: translate3d(10px, 0, 0);
    }

  }

}


@mixin theme($theme) {
  @include color($theme);
  @include density($theme);
}
